---

uuid: 9060ca81-906d-4f19-a91a-159f4eb119d6
name: "Terraform"
scopeName: source.terraform
fileTypes:
  - tf
  - tfvars

patterns:
  # Expressions
  - comment: "Terraform Expressions"
    match: "(depends_on|for_each)"
    name: variable

  # Variables
  - match: "(each\\.|local\\.|terraform\\.|var\\.|self\\.|module\\.|count\\.|path\\.|data\\.|aws_.*?\\.)"
    name: variable

  # Comments (One Liners)
  - begin: "#|//"
    captures:
      '0': {name: punctuation.definition.comment.terraform}
    comment: Comments
    end: "$\\n?"
    name: comment.line.number-sign.terraform

  # Comments (Multi Line)
  - begin: "/\\*"
    captures:
      '0': {name: punctuation.definition.comment.terraform}
    comment: Multi Line Comments
    end: "\\*/"
    name: comment.block.terraform

  # Constants
  - comment: Constants
    match: "\\b(true|false|yes|no|on|off)\\b"
    name: constant.language.terraform

  # Primitive Types
  - comment: Primitive Types
    match: "\\b(string|number|bool)\\b"
    name: support.type.primitive.terraform

  # Numbers
  - comment: Numbers
    match: "\\b([0-9]+)([kKmMgG]b?)?\\b"
    name: constant.numeric.terraform

  # Hex Numbers
  - comment: Hex Numbers
    match: "\\b(0x[0-9A-Fa-f]+)([kKmMgG]b?)?\\b"
    name: constant.numeric.terraform

  # Terraform Resources
  - name: meta.resource.terraform
    match: "(resource|data)\\s+(\")?(\\w+)(\")?\\s+(\")?([\\w\\-]+)(\")?\\s+({)"
    captures:
      '1': {name: storage.type.function.terraform}
      '2': {name: string.terraform punctuation.definition.string.begin.terraform}
      '3': {name: string.value.terraform}
      '4': {name: string.terraform punctuation.definition.string.end.terraform}
      '5': {name: string.terraform punctuation.definition.string.begin.terraform}
      '6': {name: string.value.terraform}
      '7': {name: string.terraform punctuation.definition.string.end.terraform}
      '8': {name: punctuation.definition.tag.terraform}

  # Not sure what this is?
  - match: "(provider|provisioner|variable|output|module|atlas)\\s+(\")?([\\w\\-]+)(\")?\\s+({)"
    captures:
      '1': {name: storage.type.function.terraform}
      '2': {name: string.terraform punctuation.definition.string.begin.terraform}
      '3': {name: string.value.terraform}
      '4': {name: string.terraform punctuation.definition.string.end.terraform}
      '5': {name: punctuation.definition.tag.terraform}

  # Or what this is? it seems like we can merge this with the above
  - match: "(locals|terraform)\\s+({)"
    captures:
      '1': {name: storage.type.function.terraform}
      '2': {name: punctuation.definition.tag.terraform}

  # Variables? not sure
  - comment: Value assignments (left hand side not in double quotes)
    match: "([\\w_-]+)\\s*(==|!=|\\|\\||&&|\\?|:|\\*|=)\\s*"
    captures:
      '1': {name: variable.other.assignment.terraform keyword.operator}
      '2': {name: variable}

  # Variables again? not sure
  - comment: Value assignments (left hand side in double quotes)
    match: "(\")([\\w_-]+)(\")\\s*(=)\\s*"
    captures:
      '1': {name: punctuation.quote.double.terraform}
      '2': {name: variable.assignment.terraform}
      '3': {name: punctuation.quote.double.terraform}
      '4': {name: variable}

  # Functions
  - comment: Function Calls
    match: "([\\w-]+)\\s*\\("
    captures:
      '1': {name: entity.name.function.terraform}

  # More Variables? wtf
  - comment: Variables
    match: "([\\w-]+)\\s\\{"
    captures:
      '1': {name: variable.other.terraform entity.name.function}

  # Maps
  - comment: Maps
    match: "([\\w\\-_]+)\\s+({)"
    captures:
      '1': {name: entity.name.section.terraform}
      '2': {name: punctuation.definition.tag.terraform}

  - include: "#strings"
  - include: "#heredoc"

# The grammar file itself consists of a top-level rule. This is typically split into a patterns section
# that lists the top-level elements of the program and a repository that defines each of the elements.
# Other rules in the grammar can reference elements from the repository using { "include": "#id" }.
repository:

  # Strings
  strings:
    comment: Strings
    begin: "\\\""
    beginCaptures:
      '0': {name: string.terraform punctuation.definition.string.begin.terraform}
    end: "\\\""
    endCaptures:
      '0': {name: string.terraform punctuation.definition.string.end.terraform}
    patterns:
      - include: "#string_interpolation"
      - name: string.quoted.double.terraform
        # match: "(.*)"
        match: "([\\w\\-\\/\\._\\\\%:@><|?=]+)"

  # String Interpolation
  string_interpolation:
    patterns:
      - name: "source.terraform.embedded.source"
        begin: "\\$\\{"
        beginCaptures:
          '0': {name: entity.tag.embedded.begin.terraform variable}
        end: "\\s*\\}"
        endCaptures:
          '0': {name: entity.tag.embedded.end.terraform variable}
        patterns:
          # Interpolated Variables
          - name: variable
            match: "(local\\.|terraform\\.|var\\.|self\\.|module\\.|path\\.|data\\.|aws_.*?\\.)"

          # Interpolated Function Begin
          - name: interpolated.function.begin.terraform support.function
            match: "[a-z]+\\("

          # Interpolated Function Commas
          - name: interpolated.function.comma.terraform support.function
            match: ","

          # Interpolated Function End
          - name: interpolated.function.end.terraform support.function
            match: "\\)"

          # Interpolated String
          - name: interpolated.string.terraform
            match: "[a-z_0-9]"

          # ???
          - include: "$self"

          # ???
          - include: "#string_interpolation_functions"

          # ???
          - include: "#string_interpolation_keywords"

          # ???
          - include: "#strings"

  # String Interpolation Keywords
  string_interpolation_keywords:
    comment: Terraform Keywords
    captures:
      '0': {name: entity.other.attribute-name.terraform}
    match: "(local|terraform|var|self|count|module|path|data)(\\.[\\w\\-\\*]+)+"

  # String Interpolation Functions
  string_interpolation_functions:
    comment: Terraform Functions
    begin: "(base64decode|base64encode|base64sha256|ceil|cidrnetmask|compact|distinct|file|floor|keys|length|lower|md5|pathexpand|replace|sha1|sha256|signum|sort|timestamp|title|trimspace|upper|uuid|values|cidrhost|cidrsubnet|coalesce|concat|element|format|formatlist|from|index|join|jsonencode|length|list|lookup|map|max|merge|min|slice|split|substr|zipmap)(\\()"
    beginCaptures:
      '1': {name: keyword.other.function.inline.terraform}
      '2': {name: keyword.other.section.begin.terraform}
    end: "(\\))"
    endCaptures:
      '1': {name: keyword.other.section.end.terraform}
    patterns:
      - include: "$self"
      - include: "#string_interpolation_keywords"

  # Heredocs
  heredoc:
    comment: Heredoc
    begin: "(?>\\s*<<\\s?(\\w+))"
    beginCaptures:
      '0': {name: string.terraform punctuation.definition.string.begin.terraform keyword.operator.heredoc.terraform constant}
    end: "\\1$"
    endCaptures:
      '0': {name: string.terraform punctuation.definition.string.end.terraform keyword.operator.heredoc.terraform constant}
    patterns:
      - include: "#string_interpolation"
      - name: string.quoted.double.terraform
        match: "([\\w\\-\\/\\._\\\\%\\\"*:\\[,{\\]}><@#?!]+)"
